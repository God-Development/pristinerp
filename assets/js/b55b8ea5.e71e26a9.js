"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2288],{1280:function(e,t,n){var s=n(7294);t.Z=function(e){var t={fontSize:"1.7rem",paddingRight:"left"===e.side&&"0.6rem",paddingLeft:"right"===e.side&&"0.6rem",verticalAlign:"center",display:"flex"};return s.createElement("div",{style:Object.assign({width:"fit-content",height:"3rem",padding:"0.8rem",borderRadius:"0.2rem",verticalAlign:"baseline",textAlign:"center",display:"flex",justifyContent:"center",alignItems:"center",color:"white"},e.style),className:"icon-button"},"left"===e.side&&s.createElement("div",{style:t},e.icon),s.createElement("div",null,e.children),"right"===e.side&&s.createElement("div",{style:t},e.icon))}},4472:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return u},contentTitle:function(){return d},metadata:function(){return p},assets:function(){return h},toc:function(){return c},default:function(){return g}});var s=n(7462),i=n(3366),r=(n(7294),n(3905)),a=n(1280),l=n(3750),o=["components"],u={title:"Creating custom stashes"},d=void 0,p={unversionedId:"inventory/Guides/stashes",id:"inventory/Guides/stashes",title:"Creating custom stashes",description:"We can set up custom stashes from outside the resource utilising the exported RegisterStash function. Firstly, we need to define the stashes properties.",source:"@site/docs/inventory/Guides/stashes.md",sourceDirName:"inventory/Guides",slug:"/inventory/Guides/stashes",permalink:"/docs/inventory/Guides/stashes",editUrl:"https://github.com/5mLucifer/pristinerp/tree/main/docs/inventory/Guides/stashes.md",tags:[],version:"current",frontMatter:{title:"Creating custom stashes"},sidebar:"docs",previous:{title:"Building inventory UI",permalink:"/docs/inventory/Guides/inventory_ui"},next:{title:"Configuration",permalink:"/docs/inventory/config"}},h={},c=[{value:"Example",id:"example",level:2},{value:"Example resource",id:"example-resource",level:2}],m={toc:c};function g(e){var t=e.components,n=(0,i.Z)(e,o);return(0,r.kt)("wrapper",(0,s.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"We can set up custom stashes from outside the resource utilising the exported RegisterStash function. Firstly, we need to define the stashes properties.  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"-- id: string\n-- label: string\n-- slots: number\n-- weight: number\n-- owner: string or boolean (optional)\n-- job: table (optional)\n-- name: string\n-- grade: number\n-- coords: vector or table (optional)\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"id")," - A unique name to identify the stash in the database"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"label")," - Display name when viewing the stash"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"slots")," - Number of slots that the stash will have"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"weight")," - Maximum stash weight"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"owner")," - See below"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"job")," - Key-value pairs of job name and minimum grade to access"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"coords")," - Vector or table containing coordinates")),(0,r.kt)("p",null,"The owner field will set permissions for stash access, with stashes registering to specific identifiers."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"true: Each player has their own unique stash, but can request to open the stash of another player"),(0,r.kt)("li",{parentName:"ul"},"false: Only a single stash exists and is shared between all players"),(0,r.kt)("li",{parentName:"ul"},"string: The stash explicitly belongs to the given owner, usually a player identifier")),(0,r.kt)("p",null,"You can set the stash coordinates to prevent the stash from being opened if the player isn't close enough."),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)("p",null,"Below the value is hardset, but it could be loaded from the database (especially if there are unknown fields, i.e. owner)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"-- Server\nlocal stash = {\n    id = '42wallabyway',\n    label = '42 Wallaby Way',\n    slots = 50,\n    weight = 100000,\n    owner = 'char1:license'\n}\n\nAddEventHandler('onServerResourceStart', function(resourceName)\n    if resourceName == 'prp-inventory' or resourceName == GetCurrentResourceName() then\n        PRP[\"RegisterStash\"](stash.id, stash.label, stash.slots, stash.weight, stash.owner)\n    end\nend)\n\n-- Client\nPRP[\"OpenInventory\"](\"stash\", {id=\"42wallabyway\", owner=property.owner})\n")),(0,r.kt)("p",null,"The following sample is based on esx_property's db data."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'-- Server\nlocal properties\n\nMySQL.query(\'SELECT * FROM `properties`\', {}, function(result)\n    properties = result\nend\n\nRegisterNetEvent(\'prp:loadStashes\', function(id)\nlocal stash = properties[id]\n    if stash then\n        -- id: 1, name: WhispymoundDrive, label: 2677 Whispymound Drive, coords: {"x":118.748,"y":566.573,"z":175.697}\n        PRP["RegisterStash"](stash.name, stash.label, 50, 100000, true, false, json.encode(stash.room_menu))\n    end\nend)\n\n-- Client\n\nif PRP["OpenInventory"](\'stash\', property.id) == false then\n    TriggerServerEvent(\'prp:loadStashes\')\n    PRP["OpenInventory"](\'stash\', property.id)\nend\n')),(0,r.kt)("h2",{id:"example-resource"},"Example resource"),(0,r.kt)("p",null,"DANGER: DO NOT USE THESE EXAMPLES YET AS THEY HAVE NOT BEEN UPDATED\nWe put together an example resource showcasing how to properly utilise the stash API:"),(0,r.kt)("div",{style:{width:"fit-content"}},(0,r.kt)("a",{href:"https://www.github.com/overextended/ox_inventory_examples"},(0,r.kt)(a.Z,{side:"left",icon:(0,r.kt)(l.rFR,{mdxType:"BsGithub"}),mdxType:"IconButton"},"GitHub"))))}g.isMDXComponent=!0}}]);